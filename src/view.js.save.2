import _  from 'lodash';
import * as yup from 'yup';
import axios from 'axios';
import {validateUrl, validateDuplicates, handleProcessState,handleProcessError, 
handleProcessStateDuplicate, handleProcessStateSuccess, renderError, renderErrors, render, urls, updateUrls} from './application.js';
import onChange from 'on-change';


export default () => {

  const elements = {
    container: document.getElementsByClassName('row')[0],
    form: document.getElementsByClassName('form-floating')[0],
    fields: {
    website: document.getElementById('url-input'),
  },
  submitButton: document.querySelector('button[type="submit"]'),
  };
  const initialState = {
    form: {
      valid: true,
      processState: 'filling',
      processError: null,
      errors: {},
      fields: {
      url: '',
   },
    fieldsUi: {
      touched: {
        url: false,
      },
    },
  },
};


const state = onChange(initialState, (path, value, prevValue) => {
  render(elements, initialState)(path, value, prevValue);
});

const handleInput = (e) => {
  const {value} = e.target;
  state.form.fields.url = value;
  state.form.fieldsUi.touched.url = true;


  validateUrl(state.form.fields.url)
  .then(() => {
    state.form.errors = {};
    state.form.valid = true;
  })
  .catch((error) => {
   state.form.errors = {url: error.message };
   state.form.valid = false;
    });
  });
};

elements.form.addEventListener('submit', (e) => {
e.preventDefault();

state.form.processState = 'sending';
state.form.processError = null;


const data ={
  url: state.form.fields.url,
};
validateUrl(data.url, urls)
.then(() => {
state.form.valid = true;
.catch((error) => {
  state.form.errors = { url: error.messages };
state.form.valid = false;
});
axios.post(routes.userPath(), data)
.then(() => {
   state.form.processState = 'sent';
  })
  .catch((err) => {
    state.form.processState = 'error';
    state.form.processError = errorMessages.network.error;
   throw err;

});
})
.catch((error) => {
state.form.errors = {url: error.messages};
state.form.valid = fALSE;
});
};
elements.fields.url.addEventListener('input', handleInput);
elements.form.addEventListener('submit', handleSubmit);
};
