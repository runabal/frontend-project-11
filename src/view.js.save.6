import _  from 'lodash';
import * as yup from 'yup';
import axios from 'axios';
import {validateUrl, validateDuplicates, handleProcessState,handleProcessError, 
handleProcessStateDuplicate, handleProcessStateSuccess, 
renderError, renderErrors, render, updateUrls, urls} from './application.js';
import onChange from 'on-change';


//export let urls = [];

export default () => {

  const elements = {
    container: document.getElementsByClassName('row')[0],
    form: document.getElementsByClassName('form-floating')[0],
    fields: {
    url: document.getElementById('url-input'),
  },
  submitButton: document.querySelector('button[type="submit"]'),
  };
  const initialState = {
    form: {
      valid: true,
      processState: 'filling',
      processError: null,
      errors: {},
      fields: {
      url: '',
   },
    fieldsUi: {
      touched: {
        url: false,
      },
    },
  },
};


export const state = onChange(initialState, render(elements, initialState));
const fieldElement = elements.fields.url;


fieldElement.addEventListener('input', (e) => {
  const {value} = e.target;
  state.form.fields.url = value;
  state.form.fieldsUi.touched.url = true;
  const errors = validateUrl(state.form.fields);
    state.form.errors = {};
    state.form.valid = _.isEmpty(errors);
});

elements.form.addEventListener('submit', (e) => {
e.preventDefault();

state.form.processState = 'sending';
state.form.processError = null;


//const data ={
//  url: state.form.fields.url,
//};
//validateUrl(data.url, urls)
//.then(() => {
//state.form.valid = true;
//})
//.catch((error) => {
//  state.form.errors = { url: error.messages };
//state.form.valid = false;
//});

//let urls = [];
//axios.post(routes.userPath(), data)
//.then(() => {
//   state.form.processState = 'sent';
//   urls.push(data.url);
//  })
//  .catch((err) => {
//    state.form.processState = 'error';
 //   state.form.processError = errorMessages.network.error;
 //  throw err;

//})

});
//elements.fields.url.addEventListener('input', handleInput);
};

